// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// o2_model_patankarrk2_cpp
DataFrame o2_model_patankarrk2_cpp(NumericVector times, NumericVector y, NumericVector onset, NumericVector Flux, NumericVector Khalf, NumericVector Theta, NumericVector Area_linear, NumericVector Temp_linear, NumericVector Volume_linear, int iterations);
RcppExport SEXP _oxypatankr_o2_model_patankarrk2_cpp(SEXP timesSEXP, SEXP ySEXP, SEXP onsetSEXP, SEXP FluxSEXP, SEXP KhalfSEXP, SEXP ThetaSEXP, SEXP Area_linearSEXP, SEXP Temp_linearSEXP, SEXP Volume_linearSEXP, SEXP iterationsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type times(timesSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type onset(onsetSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Flux(FluxSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Khalf(KhalfSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Theta(ThetaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Area_linear(Area_linearSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Temp_linear(Temp_linearSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Volume_linear(Volume_linearSEXP);
    Rcpp::traits::input_parameter< int >::type iterations(iterationsSEXP);
    rcpp_result_gen = Rcpp::wrap(o2_model_patankarrk2_cpp(times, y, onset, Flux, Khalf, Theta, Area_linear, Temp_linear, Volume_linear, iterations));
    return rcpp_result_gen;
END_RCPP
}
// o2_model_lsoda_cpp
DataFrame o2_model_lsoda_cpp(double y, NumericVector times, List forcings, List events, NumericVector Flux, NumericVector Khalf, NumericVector Theta, int iterations);
RcppExport SEXP _oxypatankr_o2_model_lsoda_cpp(SEXP ySEXP, SEXP timesSEXP, SEXP forcingsSEXP, SEXP eventsSEXP, SEXP FluxSEXP, SEXP KhalfSEXP, SEXP ThetaSEXP, SEXP iterationsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type times(timesSEXP);
    Rcpp::traits::input_parameter< List >::type forcings(forcingsSEXP);
    Rcpp::traits::input_parameter< List >::type events(eventsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Flux(FluxSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Khalf(KhalfSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Theta(ThetaSEXP);
    Rcpp::traits::input_parameter< int >::type iterations(iterationsSEXP);
    rcpp_result_gen = Rcpp::wrap(o2_model_lsoda_cpp(y, times, forcings, events, Flux, Khalf, Theta, iterations));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_oxypatankr_o2_model_patankarrk2_cpp", (DL_FUNC) &_oxypatankr_o2_model_patankarrk2_cpp, 10},
    {"_oxypatankr_o2_model_lsoda_cpp", (DL_FUNC) &_oxypatankr_o2_model_lsoda_cpp, 8},
    {NULL, NULL, 0}
};

RcppExport void R_init_oxypatankr(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
